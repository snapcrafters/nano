#!/usr/bin/env bash
# This is the maintainence launcher for the snap, make necessary runtime environment changes to make the snap work here.  You may also insert security confinement/deprecation/obsoletion notice of the snap here.

set \
	-o errexit \
	-o errtrace \
	-o nounset \
	-o pipefail

declare \
    launcher_title='The (UNOFFICIAL) GNU nano Snap Helper'

## Support user's default nano config when available
## Refer rcfile.c
declare \
    real_home_dir \
    user_nanorc \
    user_nanorc_homedir \
    user_nanorc_xdgconfigdir \
    snap_nanorc="${SNAP_USER_COMMON}"/.config/nano/nanorc

real_home_dir="$(
    getent \
        passwd \
        "${USER}" \
    | cut \
        --delimiter=: \
        --fields=6
)"

i386_obsoletion_disable_marker_file="${SNAP_USER_COMMON}/.20250823-i386-obsoletion-notice-disabled.marker"
if test "${SNAP_ARCH}" == i386 \
    && ! test -e "${i386_obsoletion_disable_marker_file}"; then
    dialog \
        --title 'i386 architecture support obsoletion notice' \
        --no-mouse \
        --no-collapse \
        --msgbox "$(
            printf 'We would like to inform you that we are no longer be able to support the i386 architecture for this snap at the moment.\n\n'

            printf 'Refer to the following issue for more information:\n\n'
            printf '\tObsoleting i386 support · Issue #32 · snapcrafters/nano\n'
            printf '\thttps://github.com/snapcrafters/nano/issues/32\n\n'

            printf 'You may continue using it but we recommend switching to another installation to stay updated and secured in the meantime.\n\n'

            printf 'To disable this notice, run the following command in a terminal:\n\n'

            printf '\ttouch %s\n' "${i386_obsoletion_disable_marker_file}"
        )" 0 0 # autosized
fi

# Don't do anything in classic confinement
if test "${HOME}" != "${real_home_dir}"; then
    user_nanorc_homedir="${real_home_dir}"/.nanorc

    mkdir \
        --parents \
        "$(dirname "${snap_nanorc}")"

    if test -v XDG_CONFIG_HOME; then
        user_nanorc_xdgconfigdir="${XDG_CONFIG_HOME}"/nano/nanorc
    else
        user_nanorc_xdgconfigdir="${real_home_dir}"/.config/nano/nanorc
    fi

    if test -e "${user_nanorc_homedir}"; then
        user_nanorc="${user_nanorc_homedir}"
    elif test -v user_nanorc_xdgconfigdir && test -e "${user_nanorc_xdgconfigdir}"; then
        user_nanorc="${user_nanorc_xdgconfigdir}"
    fi

    # Show warning if user do have a config file but not in the accessible location
    if test -v user_nanorc; then
        if ! test -e "${snap_nanorc}"; then
            # Disable mouse support for select-copy-paste convenience
            dialog \
                --title "${launcher_title}" \
                --no-mouse \
                --msgbox "$(
                    echo -e \
                        "It appears that you have a nanorc file in your home directory, however due to snapd's security confinement it is not accessible by the snap." \
                        "\\n\\nIf you wish to use it you have to create a hardlink manually by running the following command in a terminal:" \
                        "\\n\\nln ${user_nanorc} ${snap_nanorc}" \
                        "\\n\\nTo silent this warning create a blank file at ${snap_nanorc}."
                )" 0 0 # autosized
        fi
    fi
    export XDG_CONFIG_HOME="${SNAP_USER_COMMON}"/.config
fi

# Finally run the next part of the command chain
exec "${@}"
